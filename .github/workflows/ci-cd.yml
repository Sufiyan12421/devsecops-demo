docker:
  name: Docker Build and Push
  runs-on: ubuntu-latest
  needs: [build]
  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
  outputs:
    image_tag: ${{ steps.set_output.outputs.image_tag }}
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Install Trivy via APT
      run: |
        sudo apt update
        sudo apt install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt update
        sudo apt install -y trivy
        trivy --version

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,format=long
          type=ref,event=branch
          latest

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true

    - name: Run Trivy vulnerability scanner
      run: |
        # Pick the first tag from the list (SHA or latest)
        IMAGE=$(echo "${{ steps.meta.outputs.tags }}" | cut -d',' -f1)
        echo "Scanning Docker image: $IMAGE"
        trivy image "$IMAGE" \
          --format table \
          --exit-code 1 \
          --ignore-unfixed \
          --vuln-type os,library \
          --severity CRITICAL,HIGH

    - name: Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set image tag output
      id: set_output
      run: echo "image_tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
