name: CI/CD Pipeline with Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/sufiyan12421/devsecops-demo
      IMAGE_TAG: sha-${{ github.sha }}
      KUBE_NAMESPACE: devsecops-demo

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      # 4️⃣ Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5️⃣ Push Docker image
      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG

      # 6️⃣ Setup Trivy
      - name: Setup Trivy
        uses: aquasecurity/trivy-action@master
        with:
          version: 0.65.0

      # 7️⃣ Trivy scan for vulnerabilities
      - name: Trivy scan
        run: |
          # Scan for HIGH+CRITICAL but never fail
          trivy image --severity HIGH,CRITICAL --ignore-unfixed --exit-code 0 $IMAGE_NAME:$IMAGE_TAG
          # Fail only if CRITICAL exists
          trivy image --severity CRITICAL --ignore-unfixed --exit-code 1 $IMAGE_NAME:$IMAGE_TAG

      # 8️⃣ Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # 9️⃣ Configure Kubeconfig (from secret)
      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # 🔟 Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -n $KUBE_NAMESPACE -f k8s/deployment.yaml
          kubectl apply -n $KUBE_NAMESPACE -f k8s/service.yaml
          kubectl rollout status deployment/tiktaktoe-demo -n $KUBE_NAMESPACE
