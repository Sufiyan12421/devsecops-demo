name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/deployment.yaml'
  pull_request:
    branches: [ main ]

jobs:
  # ----------------------
  # 1️⃣ Unit Tests
  # ----------------------
  test:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests found"

  # ----------------------
  # 2️⃣ Lint / Static Analysis
  # ----------------------
  lint:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  # ----------------------
  # 3️⃣ Build
  # ----------------------
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  # ----------------------
  # 4️⃣ Docker Build, Trivy Scan & Push
  # ----------------------
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [build]
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          REPO_LOWER=${GITHUB_REPOSITORY,,} # lowercase
          docker buildx build \
            --tag devsecops-demo:${IMAGE_TAG} \
            --load \
            .
          docker tag devsecops-demo:${IMAGE_TAG} ghcr.io/${REPO_LOWER}:${IMAGE_TAG}
          docker tag devsecops-demo:${IMAGE_TAG} ghcr.io/${REPO_LOWER}:latest
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Run Trivy vulnerability scanner
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          REPO_LOWER=${GITHUB_REPOSITORY,,}
          $HOME/.local/bin/trivy-bin/trivy image ghcr.io/${REPO_LOWER}:${IMAGE_TAG} \
            --exit-code 1 \
            --severity CRITICAL,HIGH
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          HOME: ${{ github.home }}

      - name: Push Docker image to GHCR
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          REPO_LOWER=${GITHUB_REPOSITORY,,}
          docker push ghcr.io/${REPO_LOWER}:${IMAGE_TAG}
          docker push ghcr.io/${REPO_LOWER}:latest
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}

  # ----------------------
  # 5️⃣ Update Kubernetes Deployment
  # ----------------------
  update-k8s:
    name: Update Kubernetes Deployment
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Setup Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update Kubernetes deployment file
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}
          REPO_LOWER=${GITHUB_REPOSITORY,,}
          NEW_IMAGE="ghcr.io/${REPO_LOWER}:${IMAGE_TAG}"
          sed -i "s|image: ghcr.io/.*|image: ${NEW_IMAGE}|g" kubernetes/deployment.yaml
          echo "Updated deployment to use image: ${NEW_IMAGE}"
          grep -A 1 "image:" kubernetes/deployment.yaml
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Commit and push changes
        run: |
          git add kubernetes/deployment.yaml
          git commit -m "Update Kubernetes deployment with new image tag: ${GITHUB_SHA::7} [skip ci]" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.TOKEN }}@github.com/${GITHUB_REPOSITORY} HEAD:main
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
